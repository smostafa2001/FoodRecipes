@using System.Diagnostics.CodeAnalysis
@inherits InputBase<int>

<div class="input-group">
    <input type="number" class="form-control" min="0" max="10" @onchange="SetHours" value="@_hours" />
    <span class="input-group-text">Hours</span>
    <input type="number" class="form-control" min="0" max="59" @onchange="SetMinutes" value="@_minutes" />
    <span class="input-group-text">Minutes</span>
</div>

@code {
    private int _hours;
    private int _minutes;

    private void SetHours(ChangeEventArgs args)
    {
        int.TryParse(args.Value?.ToString(), out _hours);
        SetCurrentValue();
    }

    private void SetMinutes(ChangeEventArgs args)
    {
        int.TryParse(args.Value?.ToString(), out _minutes);
        SetCurrentValue();
    }

    private void SetCurrentValue() => CurrentValue = (_hours * 60) + _minutes;

    protected override void OnParametersSet()
    {
        if (CurrentValue > 0)
        {
            _hours = CurrentValue / 60;
            _minutes = CurrentValue % 60;
        }
        else
        {
            _hours = 0;
            _minutes = 0;
        }
    }

        protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out int result, [NotNullWhen(false)] out string validationErrorMessage) => throw new NotImplementedException();
}
